---
page_title: FuryBSD Blog
---

<!DOCTYPE html>
<html>
  <head>
    <title>{{ page_title }}</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <link href="https://fonts.googleapis.com/css2?family=Dosis&family=Open+Sans:ital,wght@0,300,400,500,600,700;1,300&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flexboxgrid/6.3.1/flexboxgrid.min.css" type="text/css" >
    <link rel="stylesheet" href="/css/main.css" />
  </head>
  
  <body class="blog">
    {% include "layouts/navigation.njk" %}
    <div class="content-container blog row">

      <div class="content col-lg-8"> 

          {% if collectionType == teaser %}</p>
            {% include "layouts/blogpostheader.njk" %}
          {% endif %}
       
        
          <div class="blog-post">{{ content | safe }}</div>
     
      </div>

      <div class="sidenav-block col-lg-4">
        <h3>Recent Blog Posts</h3>
        {% include "layouts/blognav.njk" %}
      </div>

    </div>
 
    {% include "layouts/pagefooter.njk" %}
  </body>

  <script>
    // SCROLL EFFECT HELPER

    // The debounce function receives our function as a parameter
    const debounce = (fn) => {

    // This holds the requestAnimationFrame reference, so we can cancel it if we wish
    let frame;

    // The debounce function returns a new function that can receive a variable number of arguments
    return (...params) => {

    // If the frame variable has been defined, clear it now, and queue for next frame
    if (frame) {
      cancelAnimationFrame(frame);
    }

    // Queue our function call for the next frame
    frame = requestAnimationFrame(() => {

      // Call our function and pass any params we received
      fn(...params);
    });

  }
};


// Reads out the scroll position and stores it in the data attribute
// so we can use it in our stylesheets
const storeScroll = () => {
  document.documentElement.dataset.scroll = window.scrollY;
}

// Listen for new scroll events, here we debounce our `storeScroll` function
document.addEventListener('scroll', debounce(storeScroll), { passive: true });

// Update scroll position for first time
storeScroll();
  </script>
</html>
